defmodule NanNoHiTest do
  use ExUnit.Case
  doctest NanNoHi

  defp store_japanese_holidays(%{pid: pid}) do
    [
      {2024, 1, 1, "元日"},
      {2024, 1, 8, "成人の日"},
      {2024, 2, 11, "建国記念の日"},
      {2024, 2, 12, "休日"},
      {2024, 2, 23, "天皇誕生日"},
      {2024, 3, 20, "春分の日"},
      {2024, 4, 29, "昭和の日"},
      {2024, 5, 3, "憲法記念日"},
      {2024, 5, 4, "みどりの日"},
      {2024, 5, 5, "こどもの日"},
      {2024, 5, 6, "休日"},
      {2024, 7, 15, "海の日"},
      {2024, 8, 11, "山の日"},
      {2024, 8, 12, "休日"},
      {2024, 9, 16, "敬老の日"},
      {2024, 9, 22, "秋分の日"},
      {2024, 9, 23, "休日"},
      {2024, 10, 14, "スポーツの日"},
      {2024, 11, 3, "文化の日"},
      {2024, 11, 4, "休日"},
      {2024, 11, 23, "勤労感謝の日"},
      {2025, 1, 1, "元日"},
      {2025, 1, 13, "成人の日"},
      {2025, 2, 11, "建国記念の日"},
      {2025, 2, 23, "天皇誕生日"},
      {2025, 2, 24, "休日"},
      {2025, 3, 20, "春分の日"},
      {2025, 4, 29, "昭和の日"},
      {2025, 5, 3, "憲法記念日"},
      {2025, 5, 4, "みどりの日"},
      {2025, 5, 5, "こどもの日"},
      {2025, 5, 6, "休日"},
      {2025, 7, 21, "海の日"},
      {2025, 8, 11, "山の日"},
      {2025, 9, 15, "敬老の日"},
      {2025, 9, 23, "秋分の日"},
      {2025, 10, 13, "スポーツの日"},
      {2025, 11, 3, "文化の日"},
      {2025, 11, 23, "勤労感謝の日"},
      {2025, 11, 24, "休日"}
    ]
    |> Enum.each(fn {year, month, day, date} ->
      NanNoHi.Server.append(pid, year, month, day, date)
    end)
  end

  setup do
    {:ok, pid} = start_supervised(NanNoHi.Server)

    [pid: pid]
  end

  describe "lookup/2" do
    setup :store_japanese_holidays

    test "2025年", %{pid: pid} do
      expected_dates = [
        {~D[2025-01-01], "元日"},
        {~D[2025-01-13], "成人の日"},
        {~D[2025-02-11], "建国記念の日"},
        {~D[2025-02-23], "天皇誕生日"},
        {~D[2025-02-24], "休日"},
        {~D[2025-03-20], "春分の日"},
        {~D[2025-04-29], "昭和の日"},
        {~D[2025-05-03], "憲法記念日"},
        {~D[2025-05-04], "みどりの日"},
        {~D[2025-05-05], "こどもの日"},
        {~D[2025-05-06], "休日"},
        {~D[2025-07-21], "海の日"},
        {~D[2025-08-11], "山の日"},
        {~D[2025-09-15], "敬老の日"},
        {~D[2025-09-23], "秋分の日"},
        {~D[2025-10-13], "スポーツの日"},
        {~D[2025-11-03], "文化の日"},
        {~D[2025-11-23], "勤労感謝の日"},
        {~D[2025-11-24], "休日"}
      ]

      assert expected_dates == NanNoHi.lookup(pid, 2025)
    end
  end

  describe "lookup/3" do
    setup :store_japanese_holidays

    test "2025年5月", %{pid: pid} do
      expected_dates = [
        {~D[2025-05-03], "憲法記念日"},
        {~D[2025-05-04], "みどりの日"},
        {~D[2025-05-05], "こどもの日"},
        {~D[2025-05-06], "休日"}
      ]

      assert expected_dates == NanNoHi.lookup(pid, 2025, 5)
    end

    test "2025年6月", %{pid: pid} do
      assert [] == NanNoHi.lookup(pid, 2025, 6)
    end
  end

  describe "lookup/4" do
    setup :store_japanese_holidays

    test "2025年5月5日", %{pid: pid} do
      assert [{~D[2025-05-05], "こどもの日"}] == NanNoHi.lookup(pid, 2025, 5, 5)
    end

    test "2025年5月7日", %{pid: pid} do
      assert [] == NanNoHi.lookup(pid, 2025, 5, 7)
    end
  end
end
